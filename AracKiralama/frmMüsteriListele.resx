<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADA
        BgAAAk1TRnQBSQFMAgEBAwEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8ApwADGgElA0ABcQNGAYADRgGAA0ABcQMaASVcAAFYAk8BwQFSAk8BoQE6
        AjkBYAMWAR84AAMeASsBXAFYAU4BzAFcAVgBTgHMAVwBWAFOAcwBXAFYAU4BzAFcAVgBTgHMAVwBWAFO
        AcwDHgErHAADCgENA0gBhAM7AWUDDQESCAADDQESAzsBZQNHAYMDCQEMVAABUgJPAaEBVAEAAQgB/wFY
        ASUBLQHvAV8BWAFxAdEDMQFONAACQgFBAXMDMQFOEAADMQFOAkIBQQFzGAADCgENA00BlQMPARQYAAMP
        ARQDTAGUAwkBDFAAAzoBYgFYASUBLQHvAWABWgF3AdYCagL/AmoB4gH5AzEBTjAAAUkCSAGHAyYBOQJK
        AUkBiwMtAUUDLQFFAkoBSQGLAycBOgNIAYYYAANIAYYDDgETIAADDwEUA0cBg1AAAxYBHwFeAVoBcwHT
        AmoC/wJqAv8CagL/AmoB4gH5AzABTCwAAVABTwFOAZsDGgElAVoBVwFRAcACOgE5AWACOgE5AWABWgFX
        AVEBwAMbASYCUAFOAZoUAAMcAScDOwFlCAADRwGDAwwBEAgAAwwBEANHAYMIAAM7AWUDGgElUAADLwFJ
        Am0B3AH3AmoC/wJqAv8CagL/AmoB4gH5AzEBTigAAlQBUQGvAw0BEQFaAVcBUQHAAjoBOQFgAjoBOQFg
        AVoBVwFRAcADDQESAVUBUwFRAa4UAANBAXMDDQERCAADCwEPA00BlwMNARIDCwEPA00BlwMNARIIAAMN
        ARIDQQFyVAADLwFJAm0B3AH3AmoC/wJqAv8CagL/AmoB4gH5AzEBTiQAAVkBVwFSAb8DAAEBAVoBVwFR
        AcACOgE5AWACOgE5AWABWgFXAVEBwAMAAQEBWgFWAVIBvhQAA0YBgBAAAwwBEANNAZUDTQGVAwwBEBAA
        A0YBgFgAAy8BSQJtAdwB9wJqAv8CagL/AmoC/wJqAeIB+QMxAU4gAAFaAVcBUQHABAABWgFXAVEBwAI6
        ATkBYAI6ATkBYAFaAVcBUQHABAABWgFXAVEBwBQAA0YBgBAAAwwBEANNAZUDTQGVAwwBEBAAA0YBgFwA
        Ay8BSQJtAdwB9wJqAv8CagL/AmoC/wJqAeIB+QMzAVIcAAFaAVcBUQHABAABWgFXAVEBwAI6ATkBYAI6
        ATkBYAFaAVcBUQHABAABWgFXAVEBwBQAA0EBcwMNAREIAAMLAQ8DTQGXAw0BEgMLAQ8DTQGXAw0BEggA
        Aw0BEgNBAXJgAAMvAUkCbQHcAfcCagL/AmoC/wFnAVwB4QH/AVsBEAEvAf4DSAGEFAADAQECAVoBVgFR
        Ab0EAAMjATQDEwEaAxMBGgMjATQEAAFaAVYBUgG+AwEBAhAAAxwBJwM7AWUIAANFAX8DDAEQCAADDAEQ
        A0UBfwgAAzsBZQMaASVkAAMwAUwCagHiAfkBZgFaAd0B/wFXAQgBIgH/AVQBAAEIAf8BXgFDAVYB5RQA
        AysBQgFZAVcBUgG/AycBOgMnAToDJwE6AycBOgMnAToDJwE6AVoBVwFRAcADKgFBFAADSAGHAw4BEyAA
        Aw8BFANIAYRsAAMxAU0BWgEOASsB/gFUAQABCAH/AVwBOgFQAeoDCwEPFAADQwF3AU0BTAFLAZEDSAGG
        AV4BVwFMAdADSAGGA0gBhgFeAVcBTAHQA0gBhgFNAUwBSwGRA0MBdxQAAwoBDgNMAZYDDgETGAADDgET
        A00BlQMKAQ1wAAFFAUQBRQF8AVwBQAFTAecDDAEQJAABTAJLAY8BVQFTAVEBrgFVAVMBUQGuA0sBjiQA
        AwoBDgNIAYcDOwFlAw0BEQgAAw0BEQM7AWUDSAGGAwoBDeAAAxwBJwNBAXIDRgGBA0YBgQNBAXIDGwEm
        /wBVAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAG/wIABP8B+AEfAgABwwH/
        AfABDwHhAYcCAAHBAf8B8wHPAccB4wIAAcAB/wHwAQ8BzwHzAgABwAF/AfABDwKZAgAB4AE/AfABDwGY
        ARkCAAHwAR8B8AEPAbwBPQIAAfgBDwH0AS8BvAE9AgAB/AEHAfQBLwGYARkCAAH+AQMB5AEnApkCAAH/
        AQMB4AEHAc8B8wIAAf8BgwHgAQcBxwHjAgAB/wHHAfwBPwHhAYcCAAT/AfgBHwIABv8CAAs=
</value>
  </data>
</root>